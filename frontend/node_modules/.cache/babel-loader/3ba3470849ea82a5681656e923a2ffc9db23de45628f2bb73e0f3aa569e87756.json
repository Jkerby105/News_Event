{"ast":null,"code":"var _jsxFileName = \"/Users/jeanauguste/Downloads/013-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./page/Home\";\nimport ErrorPage from \"./page/Error\";\nimport EventsPage, { loader as eventsLoader } from \"./page/Events\";\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventAction } from \"./page/EventDetail\";\nimport NewEventPage, { action as newEventAction } from \"./page/NewEvent\";\nimport EditEventPage from \"./page/EditEvent\";\nimport RootLayout from \"./page/Root\";\nimport EventsRootLayout from \"./page/EventsRoot\";\nimport { action as manipulateEventAction } from './components/EventForm';\nimport NewsletterPage, { action as newsLetterAction } from \"./page/Newsletter\";\n\n// const router = createBrowserRouter([\n//   {\n//     path: \"/\",\n//     element: <RootLayout />,\n//     children: [\n//       { index: true, element: <HomePage />, errorElement: <ErrorPage /> },\n//       { path: \"/events\", element: <EventPage /> },\n//       { path: \"/events/:productId\", element: <EventDetailPage /> },\n//       { path: \"/events/new\", element: <NewEventPage /> },\n//       { path: \"events/:productId/edit\", element: <EditEventPage /> },\n//     ],\n//   },\n// ]);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 35\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":productId\",\n      id: \"event-detail\",\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 39\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 40\n        }, this),\n        action: manipulateEventAction\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 35\n      }, this),\n      action: manipulateEventAction\n    }]\n  }, {\n    path: 'newsletter',\n    element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 18\n    }, this),\n    action: newsLetterAction\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","ErrorPage","EventsPage","loader","eventsLoader","EventDetailPage","eventDetailLoader","action","deleteEventAction","NewEventPage","newEventAction","EditEventPage","RootLayout","EventsRootLayout","manipulateEventAction","NewsletterPage","newsLetterAction","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/Users/jeanauguste/Downloads/013-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./page/Home\";\nimport ErrorPage from \"./page/Error\";\nimport EventsPage, { loader as eventsLoader } from \"./page/Events\";\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventAction } from \"./page/EventDetail\";\nimport NewEventPage, { action as newEventAction } from \"./page/NewEvent\";\nimport EditEventPage from \"./page/EditEvent\";\nimport RootLayout from \"./page/Root\";\nimport EventsRootLayout from \"./page/EventsRoot\";\nimport {action as manipulateEventAction} from './components/EventForm';\nimport NewsletterPage, {action as newsLetterAction} from \"./page/Newsletter\";\n\n// const router = createBrowserRouter([\n//   {\n//     path: \"/\",\n//     element: <RootLayout />,\n//     children: [\n//       { index: true, element: <HomePage />, errorElement: <ErrorPage /> },\n//       { path: \"/events\", element: <EventPage /> },\n//       { path: \"/events/:productId\", element: <EventDetailPage /> },\n//       { path: \"/events/new\", element: <NewEventPage /> },\n//       { path: \"events/:productId/edit\", element: <EditEventPage /> },\n//     ],\n//   },\n// ]);\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: \"events\",\n        element: <EventsRootLayout />,\n        children: [\n          { index: true, element: <EventsPage />, loader: eventsLoader },\n          {\n            path: \":productId\",\n            id: \"event-detail\",\n            loader: eventDetailLoader,\n            children: [\n              { index: true, element: <EventDetailPage />, action: deleteEventAction },\n              { path: \"edit\", element: <EditEventPage />, action: manipulateEventAction},\n            ],\n          },\n          { path: \"new\", element: <NewEventPage />, action: manipulateEventAction },\n        ],\n      },\n      {\n        path: 'newsletter',\n        element: <NewsletterPage/>,\n        action: newsLetterAction\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}