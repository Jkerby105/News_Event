{"ast":null,"code":"var _jsxFileName = \"/Users/jeanauguste/Downloads/013-adv-starting-project/frontend/src/page/NewEvent.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  console.log(data);\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    data: data.get('data'),\n    description: data.get('description')\n  };\n  console.log(\"fame-to-me\");\n  // const response = await fetch('http://localhost:8080/events',{\n  //     method: 'POST',\n  //     headers: {\n  //         'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify(eventData)\n  // });\n\n  // if(!response.ok){\n  //         throw json({message: 'Could not save event.'}, {status: 500});\n  // }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","console","log","eventData","title","get","image","description","$RefreshReg$"],"sources":["/Users/jeanauguste/Downloads/013-adv-starting-project/frontend/src/page/NewEvent.js"],"sourcesContent":["import { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\n\nfunction NewEventPage() {\n\n    return(\n        <EventForm/>\n    )\n}\n\nexport default NewEventPage;\n\nexport async function action({request,params}){\n     const data  = await request.formData();\n\n     console.log(data);\n\n     const eventData = {\n        title: data.get('title'),\n        image: data.get('image'),\n        data: data.get('data'),\n        description: data.get('description')\n     }\n\n     console.log(\"fame-to-me\");\n    // const response = await fetch('http://localhost:8080/events',{\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify(eventData)\n    // });\n\n    // if(!response.ok){\n    //         throw json({message: 'Could not save event.'}, {status: 500});\n    // }\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAEpB,oBACID,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEpB;AAACC,EAAA,GALQL,YAAY;AAOrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EACzC,MAAMC,IAAI,GAAI,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAEtCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,MAAMI,SAAS,GAAG;IACfC,KAAK,EAAEL,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEP,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC;IACxBN,IAAI,EAAEA,IAAI,CAACM,GAAG,CAAC,MAAM,CAAC;IACtBE,WAAW,EAAER,IAAI,CAACM,GAAG,CAAC,aAAa;EACtC,CAAC;EAEDJ,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;AACJ;AAAC,IAAAP,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}